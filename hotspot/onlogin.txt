:put (",0,1,1,1,");
:local com [/ip hotspot user get [find name=$user] comment];
/ip hotspot user set comment="" $user;
:if ($com!="") do={
:local mac $"mac-address";


###expiremode
:local macNoCol;
:for i from=0 to=([:len $mac] - 1) do={ 
:local char [:pick $mac $i]
:if ($char = ":") do={
:set $char ""
}
:set macNoCol ($macNoCol . $char)
}
:local validity [:pick $com 0 [:find $com ","]];
:if ( $validity!="0m" ) do={
:local sc [/sys scheduler find name=$user]; :if ($sc="") do={ :local a [/ip hotspot user get [find name=$user] limit-uptime]; :local c ($validity); :local date [ /system clock get date]; /sys sch add name="$user" disable=no start-date=$date interval=$c on-event="/ip hotspot user remove [find name=$user]; /ip hotspot active remove [find user=$user]; /ip hotspot cookie remove [find user=$user]; /system sche remove [find name=$user]; /file remove \"hotspot/data/$macNoCol.txt\";" policy=ftp,reboot,read,write,policy,test,password,sniff,sensitive,romon; :delay 2s; } else={ :local sint [/sys scheduler get $user interval]; :if ( $validity!="" ) do={ /sys scheduler set $user interval ($sint+$validity); } };
}



:local infoArray [:toarray [:pick $com ([:find $com ","]+1) [:len $com]]];
:local totaltime [/ip hotspot user get [find name="$user"] limit-uptime];
:local amt [:pick $infoArray 0];
:local ext [:pick $infoArray 1];
:local vendo [:pick $infoArray 2];
:local uactive [/ip hotspot active print count-only]; 
:local uptime [/ip hotspot user get [find name="$user"] uptime]; 
:local pausetime ($totaltime - $uptime); 
:local getIncome [:put ([/system script get [find name=todayincome] source])];
/system script set source="$getIncome" todayincome;
:local getSales ($amt + $getIncome);
/system script set source="$getSales" todayincome;
:local getMonthlyIncome [:put ([/system script get [find name=monthlyincome] source])];
/system script set source="$getMonthlyIncome" monthlyincome;
:local getMonthlySales ($amt + $getMonthlyIncome);
/system script set source="$getMonthlySales" monthlyincome;

###expiremode
:local validUntil [/sys scheduler get $user next-run];
/file print file="hotspot/data/$macNoCol" where name="dummyfile"; 
:delay 1s; 
/file set "hotspot/data/$macNoCol" contents="$user#$validUntil";

###telegram
:local vendoNew;
:for i from=0 to=([:len $vendo] - 1) do={ 
:local char [:pick $vendo $i]
:if ($char = " ") do={
:set $char "%20"
}
:set vendoNew ($vendoNew . $char)
}
/tool fetch url="https://api.telegram.org/bot5763475937:AAHGTysLyOg9zVnBcyZ0Gn4LlR_3EPNSdgo/sendmessage?chat_id=5233870925&text=<<======New Sales======>> %0A Vendo: $vendoNew %0A Voucher: $user %0A IP: $address %0A MAC: $mac %0A Amount: $amt %0A Extended: $ext %0A Total Time: $pausetime %0A %0AToday Sales: $getSales %0AMonthly Sales : $getMonthlySales %0AActive Users: $uactive%0A <<=====================>>" keep-result=no;

###recordsales
:local date [ /system clock get date ];
:local year [ :pick $date 7 11 ];
:local month [ :pick $date 0 3 ];
:local mac $"mac-address"; 
:local time [/system clock get time ];
/system script add name="$date-|-$time-|-$user-|-$amt-|-$address-|-$mac-|-$validUntil-|-testing-|-$vendo" owner="$month$year" source=$date comment=testing; 


};


###macsync
:local cmac $"mac-address"
:foreach AU in=[/ip hotspot active find user="$username"] do={
:local amac [/ip hotspot active get $AU mac-address];
:if ($cmac!=$amac) do={  /ip hotspot active remove [/ip hotspot active find mac-address="$amac"]; }
};


###lockmac
:local mac $"mac-address"; /ip hotspot user set mac-address=$mac [find where name=$user]